package Atomia::DNS::Signatures;

use strict;
use warnings;

our $signatures = {
	"AddZone" => "void string int string string int int int int array string",
	"DeleteZone" => "void string",
	"EditZone" => "void string int string string int int int int array string",
	"AddDnsRecords" => "array[int] string array[resourcerecord]",
	"EditDnsRecords" => "void string array[resourcerecord]",
	"SetDnsRecords" => "void string array[resourcerecord]",
	"DeleteDnsRecords" => "void string array[resourcerecord]",
	"GetDnsRecords" => "array[resourcerecord] string string",
	"GetLabels" => "array[string] string",
	"GetZone" => "zone string",
	"GetZoneBulk" => "array[binaryzone] array",
	"GetZoneBinary" => "binaryzone string",
	"RestoreZone" => "void string string zone",
	"RestoreZoneBinary" => "void string string binaryzone",
	"RestoreZoneBulk" => "void array[bulkzones] string array[binaryzone]",
	"SetDnsRecordsBulk" => "void array array[resourcerecord]",
	"CopyDnsZoneBulk" => "void string array",
	"CopyDnsLabelBulk" => "void string string array[hostname]",
	"DeleteDnsRecordsBulk" => "void array array[resourcerecord]",
	"AddNameserver" => "void string string",
	"DeleteNameserver" => "void string",
	"GetNameserver" => "string string",
	"GetChangedZones" => "changes string",
	"GetChangedZonesBatch" => "changes string int",
	"MarkUpdated" => "void int string string",
	"MarkUpdatedBulk" => "void array[int] array array",
	"MarkAllUpdatedExcept" => "void string int",
	"MarkAllUpdatedExceptBulk" => "void array array[int]",
	"GetAllZones" => "zonestruct",
	"ReloadAllZones" => "void",
	"GetUpdatesDisabled" => "int",
	"SetUpdatesDisabled" => "void int",
	"GetNameserverGroup" => "string string",
	"SetNameserverGroup" => "void string string",
	"AddNameserverGroup" => "void string",
	"DeleteNameserverGroup" => "void string",
	"AddSlaveZone" => "void string string string string string",
	"DeleteSlaveZone" => "void string",
	"GetChangedSlaveZones" => "changes string",
	"MarkSlaveZoneUpdated" => "void int string string",
	"GetSlaveZone" => "slavezone string",
	"ReloadAllSlaveZones" => "void",
	"AllowZoneTransfer" => "void string string",
	"GetAllowedZoneTransfer" => "allowedtransfer",
	"DeleteAllowedZoneTransfer" => "void string string",
	"GetDNSSECKeys" => "keyset",
	"GetExternalDNSSECKeys" => "keyset",
	"AddDNSSECKey" => "keyid string int string int",
	"AddExternalDNSSECKey" => "int string",
	"ActivateDNSSECKey" => "void int",
	"DeactivateDNSSECKey" => "void int",
	"DeleteDNSSECKey" => "void int",
	"DeleteExternalDNSSECKey" => "void int",
	"GetDNSSECZSKInfo" => "zskinfo",
};

1;
