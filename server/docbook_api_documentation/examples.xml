          <section xml:id="api-examples">
            <title>Code Examples</title>
            <section xml:id="scroll-bookmark-213">
              <title>Perl example</title>
              <informalexample>
                <programlisting>
                  #!/usr/bin/perl -w
                  <?linebreak?>
                  <?linebreak?>
                  use strict;
                  <?linebreak?>
                  use warnings;
                  <?linebreak?>
                  <?linebreak?>
                  use SOAP::Lite;
                  <?linebreak?>
                  use Data::Dumper;
                  <?linebreak?>
                  <?linebreak?>
                  my $soap = SOAP::Lite
                  <?linebreak?>
                  -&gt;  uri('urn:Atomia::DNS::Server')
                  <?linebreak?>
                  -&gt;  proxy('http://your.soap.server/atomiadns')
                  <?linebreak?>
                  -&gt;  on_fault(sub {
                  <?linebreak?>
                  my($soap, $res) = @_;
                  <?linebreak?>
                  die "got fault of type " . $res-&gt;faultcode . ": " . (ref $res ? $res-&gt;faultstring : $soap-&gt;transport-&gt;status) . "\n";
                  <?linebreak?>
                  });
                  <?linebreak?>
                  <?linebreak?>
                  my $res;
                  <?linebreak?>
                  $res = $soap-&gt;AddZone('example.se', 3600, 'ns1.somecompany.se.', 'registry.somecompany.se.', 10800, 3600, 604800, 86400, [ 'ns1.somecompany.se', 'ns2.somecompany.se' ], 'nameservergroup');
                  <?linebreak?>
                  <?linebreak?>
                  print "AddZone returned " . Dumper($res);
                  <?linebreak?>
                  <?linebreak?>
                  $res = $soap-&gt;AddDnsRecords('example.se', [SOAP::Data-&gt;new(name =&gt; 'resourcerecord', value =&gt; { label =&gt; '@', class =&gt; 'IN', ttl =&gt; 3600, type =&gt; 'A', rdata =&gt; '127.0.0.1' }),
                  <?linebreak?>
                  SOAP::Data-&gt;new(name =&gt; 'resourcerecord', value =&gt; { label =&gt; '@', class =&gt; 'IN', ttl =&gt; 3600, type =&gt; 'AAAA', rdata =&gt; '2001:0DB8::1' }),
                  <?linebreak?>
                  SOAP::Data-&gt;new(name =&gt; 'resourcerecord', value =&gt; { label =&gt; 'mail', class =&gt; 'IN', ttl =&gt; 3600, type =&gt; 'AAAA', rdata =&gt; '2001:0DB8::2' }),
                  <?linebreak?>
                  SOAP::Data-&gt;new(name =&gt; 'resourcerecord', value =&gt; { label =&gt; '@', class =&gt; 'IN', ttl =&gt; 3600, type =&gt; 'MX', rdata =&gt; 'mail.example.se.' })
                  <?linebreak?>
                  ]);
                  <?linebreak?>
                  <?linebreak?>
                  print "AddDnsRecords returned " . Dumper($res);
                </programlisting>
              </informalexample>
            </section>
            <section xml:id="scroll-bookmark-214">
              <title>.NET Examples</title>
              <para>Steps:</para>
              <itemizedlist>
                <listitem>
                  <para>Create a new command-line application, call it AtomiaDNSExampleClient</para>
                </listitem>
                <listitem>
                  <para>
                    Add the WSDL found on http://your.soap.server.installation/wsdl-atomiadns.wsdl as a Web Service Reference called AtomiaDNS
                  </para>
                </listitem>
                <listitem>
                  <para>Replace the code with the code below:</para>
                </listitem>
              </itemizedlist>
              <informalexample>
                <programlisting>
                  using System;
                  <?linebreak?>
                  using System.Collections.Generic;
                  <?linebreak?>
                  using System.Text;
                  <?linebreak?>
                  using AtomiaDNSExampleClient.AtomiaDNS;
                  <?linebreak?>
                  <?linebreak?>
                  namespace AtomiaDNSExampleClient
                  <?linebreak?>
                  {
                  <?linebreak?>
                  class Program
                  <?linebreak?>
                  {
                  <?linebreak?>
                  static void Main(string[] args)
                  <?linebreak?>
                  {
                  <?linebreak?>
                  AtomiaDNSService ws = new AtomiaDNSService();
                  <?linebreak?>
                  ws.Url = "http://your.soap.server.installation/atomiadns";
                  <?linebreak?>
                  <?linebreak?>
                  try
                  <?linebreak?>
                  {
                  <?linebreak?>
                  DeleteZone zone = new DeleteZone();
                  <?linebreak?>
                  zone.zonename = "testzone-fromdotnet.com";
                  <?linebreak?>
                  <?linebreak?>
                  DeleteZoneResponse response = ws.DeleteZone(zone);
                  <?linebreak?>
                  Console.WriteLine("Zone deleted, got status " + response.status);
                  <?linebreak?>
                  }
                  <?linebreak?>
                  catch (Exception e)
                  <?linebreak?>
                  {
                  <?linebreak?>
                  Console.WriteLine("Caught exception when removing zone: " + e);
                  <?linebreak?>
                  }
                  <?linebreak?>
                  <?linebreak?>
                  try
                  <?linebreak?>
                  {
                  <?linebreak?>
                  AddZone zone = new AddZone();
                  <?linebreak?>
                  zone.mname = "ns1.atomiadns.com.";
                  <?linebreak?>
                  zone.refresh = 10800;
                  <?linebreak?>
                  zone.retry = 3600;
                  <?linebreak?>
                  zone.expire = 604800;
                  <?linebreak?>
                  zone.minimum = 3600;
                  <?linebreak?>
                  zone.zonettl = 60;
                  <?linebreak?>
                  zone.zonename = "testzone-fromdotnet.com";
                  <?linebreak?>
                  zone.rname = "registry.atomiadns.com.";
                  <?linebreak?>
                  zone.nameservers = new string[] { "ns1.atomiadns.com.", "ns2.atomiadns.com." };
                  <?linebreak?>
                  zone.nameservergroup = "someservergroup";
                  <?linebreak?>
                  AddZoneResponse response = ws.AddZone(zone);
                  <?linebreak?>
                  <?linebreak?>
                  Console.WriteLine("Zone added, got status " + response.status);
                  <?linebreak?>
                  }
                  <?linebreak?>
                  catch (Exception e)
                  <?linebreak?>
                  {
                  <?linebreak?>
                  Console.WriteLine("Caught exception when adding zone: " + e);
                  <?linebreak?>
                  }
                  <?linebreak?>
                  }
                  <?linebreak?>
                  }
                  <?linebreak?>
                  }
                </programlisting>
              </informalexample>
            </section>
          </section>
